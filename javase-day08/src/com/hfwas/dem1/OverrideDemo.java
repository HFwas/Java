package com.hfwas.dem1;

/**
 * @Author: HFwas
 * @Date: 2020/12/14
 * @Description: 方法覆盖重写的注意事项：
 * 1.必须保证父子类之间方法的名称相同，参数列表也相同
 *      @override：写在方法前面，用来检测是不是有效的正确覆盖重写
 * 2.子类方法的返回值必须【小于等于】父类方法的返回值范围
 *      前提:java.lang.Object类是所有类的公共最高父类（祖宗类），java.lang.String就是object的子类
 * 3.子类方法的权限必须【大于等于】父类方法的权限修饰符。
 *      小扩展提示：public > protected > default > private
 *      备注：(default)不是关键字default，而不是什么都不写，留空
 *
 * 继承关系中，父子类构造方法的访问特点：
 *      1.子类构造方法当中有一个默认隐含的"super()"调用，所以一定是先调用的父类构造方法，后执行的子类构造
 *      2.子类构造可以通过super()关键字来调用父类重载构造
 *      3.super()的父类构造调用，必须是子类构造方法第一个语句，不能一个子类构造调用多次super构造
 * 总结：子类必须调用父类的构造方法，不写则赠送super();写了则用写的指定的super()调用，super只能有一个，还必须是第一个
 *
 * super关键字的用法有三种：
 *      1.在子类的成员方法中，访问父类的成员变量
 *      2.在子类的成员方法中，访问父类的成员方法
 *      3.在子类的成员方法中，访问父类的构造方法
 *
 * super关键字用来访问父类内容，而this关键字用来访问本类内容。用法也有三种：
 *      1.在本类的成员方法中，访问本类的成员变量
 *      2.在本类的成员方法中，访问本类的另一个成员方法
 *      3.在本类的构造方法中，访问本类的另一个构造方法
 *  在第三种用法当中要注意：
 *      A。this(....)调用也必须是构造方法的第一个语句，唯一一个
 *      B。super和this两种构造调用，不能同时使用
 * @version: 1.0
 */
public class OverrideDemo {

    public static void main(String[] args) {
        //输出结果：父类构造方法  子类构造方法
        Zi zi = new Zi();

    }

}
